#include <windows.h>
#include "resource.h"

void FileListBox(HWND hwndlist)
{
	//TCHAR szBuffer[1024];//使用栈
	//TCHAR *pVarName;//使用堆

	//TCHAR *pVarBlook;
	//TCHAR *pVarBeg, *pVarEnd;
	//int iLen;
	//pVarBlook = GetEnvironmentStrings();//环境变量块-字符串数组
	//while (*pVarBlook)
	//{
	//	if (*pVarBlook != '=')
	//	{
	//		pVarBeg = pVarBlook;
	//		while (*pVarBlook++ != '=');
	//		pVarEnd = pVarBlook - 1;
	//		iLen = pVarEnd - pVarBeg;
	//		//使用栈
	//		//ZeroMemory(szBuffer, 1024);
	//		//CopyMemory(szBuffer, pVarBeg, iLen*(sizeof(TCHAR)));
	//		//SendMessage(hwndlist, LB_ADDSTRING, 0, (LPARAM)szBuffer);

	//		//使用堆
	//		//pVarName = (TCHAR*)calloc(iLen + 1, sizeof(TCHAR));
	//		pVarName = (TCHAR*)malloc((iLen + 1) * sizeof(TCHAR));
	//		ZeroMemory(pVarName, ((iLen + 1) * sizeof(TCHAR)));
	//		CopyMemory(pVarName, pVarBeg, iLen*(sizeof(TCHAR)));
	//		SendMessage(hwndlist, LB_ADDSTRING, 0, (LPARAM)pVarName);
	//		
	//	}
	//	while (*pVarBlook++ != '\0');
	//}
	//FreeEnvironmentStrings(pVarBlook);

	LPTSTR lpszVariable;
	LPTCH lpvEnv;
	//获得环境变量内存块的指针
	lpvEnv = GetEnvironmentStrings();
	if (lpvEnv == NULL)
	{
		return;
	}

	//环境变量字符串是以NULL分隔的，内存块以NULL结尾
	lpszVariable = (LPTSTR)lpvEnv;
	while (*lpszVariable)
	{
		//_tprintf(TEXT("%s/n"), lpszVariable);
		
		SendMessage(hwndlist, LB_ADDSTRING, 0, (LPARAM)lpszVariable);
		lpszVariable += lstrlen(lpszVariable) + 1;   //移动指针
	}
	FreeEnvironmentStrings(lpvEnv);

}

INT_PTR CALLBACK MainDlgProc(HWND hDlg, UINT uMsg, WPARAM wParam, LPARAM lParam)
{
	BOOL bRet = TRUE;
	switch (uMsg)
	{
	case WM_INITDIALOG:
	{
		FileListBox(GetDlgItem(hDlg,IDC_LIST));
		break;
	}
	case WM_CLOSE:
	{
		EndDialog(hDlg, 0);
		break;
	}
	default:
		bRet = FALSE;
		break;
	}

	return bRet;
}

int APIENTRY wWinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPTSTR lpCmdLine, int nCmdShow)
{
	DialogBox(hInstance, MAKEINTRESOURCE(IDD_DIALOG1), NULL, MainDlgProc);

	return 0;
}
